name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    env:
      VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID_FRONTEND }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
          
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Build frontend
        run: pnpm --filter dublindash-frontend build
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Debug paths
        run: |
          pwd
          ls -la
          ls -la apps/
          ls -la apps/frontend/
          
      - name: Deploy to Vercel
        run: |
          cd apps/frontend
          pwd
          ls -la
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

  # Backend deployment disabled - WebSockets not supported on Vercel
  # See docs/BACKEND-DEPLOYMENT.md for alternatives (Railway, Render, Fly.io)
  # 
  # deploy-backend:
  #   runs-on: ubuntu-latest
  #   env:
  #     VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID_BACKEND }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     
  #     - uses: pnpm/action-setup@v4
  #       with:
  #         version: 10
  #         run_install: false
  #         
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'pnpm'
  #         
  #     - name: Install dependencies
  #       run: pnpm install --no-frozen-lockfile
  #       
  #     - name: Build backend
  #       run: pnpm --filter dublindash-backend build
  #         
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #       
  #     - name: Deploy to Vercel
  #       run: |
  #         cd apps/backend
  #         pwd
  #         ls -la
  #         vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}